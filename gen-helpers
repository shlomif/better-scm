#!/usr/bin/env perl

use strict;
use warnings;

use HTML::Latemp::GenMakeHelpers ();
use Path::Tiny qw/ path /;

sub _exec
{
    my ( $cmd, $err ) = @_;

    if ( system(@$cmd) )
    {
        die $err;
    }
    return;
}

_exec( [ $^X, 'bin/my-cookiecutter.pl' ], 'cookiecutter failed.' );

if ( system( "gmake", "--silent", "-f", "lib/make/build-deps/build-deps.mak" ) )
{
    die "build-deps failed!";
}

my $DIR = "lib/make/";

my $generator = HTML::Latemp::GenMakeHelpers->new(
    'hosts' => [
        {
            'id'         => "common",
            'source_dir' => "common",
            'dest_dir'   => "\$(D)",
        },
        {
            'id'         => "scm",
            'source_dir' => "src",
            'dest_dir'   => "\$(D)",
        },
    ],
    out_dir => $DIR,
);

$generator->process_all();

open my $out_fh, ">", "Makefile" or die "Cannot open Makefile $!";
print {$out_fh} "include $DIR/main.mak\n";
close($out_fh);

my $render = path('bin/render');
$render->spew_utf8(
    path('bin/render-source.pl')->slurp_utf8() =~ s#^(?:use lib[^\n]+\n)+#
    "use lib \"" . (`wml-params-conf --show-privlib` =~ s%[\n\r]+\z%%r) . "\";\n";
    #emrs
);
$render->chmod(0755);
my $r_fh = path("$DIR/rules.mak");
my $text = $r_fh->slurp_utf8;
$text =~
s#^(\$\(SCM_DOCS_DEST\)[^\n]+\n\t)[^\n]+#${1}\$(call SCM_INCLUDE_WML_RENDER)#ms
    or die "Cannot subt";
{
    my $needle = 'cp -f $< $@';
    $text =~ s#^\t\Q$needle\E$#\t\$(call COPY)#gms;
}

$r_fh->spew_utf8($text);

sub _remtt2
{
    my $s = shift;
    $s =~ s% *\S+\.tt2(\s)%$1%gms or die;
    $s =~ s%\s*\n?\z%%ms;
    $s .= "\n" if $s !~ /\n\z/;
    return $s;
}
path("$DIR/include.mak")->edit_raw(
    sub {
        s#^SCM_IMAGES :=\K([^\n]+\n)#_remtt2($1)
        #ems or die;
    }
);
my $iter = path("./src")->iterator( { recurse => 1, } );
my @tt;
while ( my $next = $iter->() )
{
    my $s = "$next";
    if ( ( not -d $next ) and $s =~ s#\.tt2\z## )
    {
        push @tt, ( $s =~ s#\A(\./)?src/##r );
    }
}

path("$DIR/tt2.txt")->spew_raw( join "\n", ( sort @tt ), "" );
_exec( [ "gmake", 'bulk-make-dirs' ], "gmake failed" );
